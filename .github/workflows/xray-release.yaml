name: "xray release"
run-name: "xray release"
on:
  push:
    paths:
      - "xray/tag"
      - "xray/Dockerfile"
      - ".github/workflows/xray-release.yaml"

  workflow_dispatch:
    inputs:
      chosen-os::
        required: true
        type: choice
        default: ubuntu
        options:
        - ubuntu
        - Alpine
        - fedora
        - centos
      version:
        description: 'version'
        required: true
        default: '1.8.7'

jobs:
  test:
    # runs-on: [self-hosted, "${{ inputs.chosen-os }}"]
    # runs-on: ubuntu-latest
    runs-on: ${{ github.event.inputs.chosen-os }}

    steps:
      - run: echo Hello xray world! 
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare
        id: prepare
        run: |
          VERSION=${{ github.event.inputs.version }}
          IMAGE_NAME=xray
          TAGS="p19992003/${IMAGE_NAME}:${VERSION},p19992003/${IMAGE_NAME}:latest"
          echo "tags:${TAGS} version:${VERSION}"
          echo "build_args=VERSION=${VERSION}" >> $GITHUB_OUTPUT
          echo "image-name=${IMAGE_NAME}" >> $GITHUB_OUTPUT
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build
        uses: docker/build-push-action@v5
        with:
          context: ./${{ steps.prepare.outputs.image-name }}
          file: ./${{ steps.prepare.outputs.image-name }}/Dockerfile
          # platforms: linux/386,linux/amd64,linux/arm64,linux/arm/v6,linux/arm/v7,linux/ppc64le,linux/s390x
          platforms: linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          build-args: ${{ steps.prepare.outputs.build_args }}
          tags: ${{ steps.prepare.outputs.tags }}      
